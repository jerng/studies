module 'ez' ['module_info'/0,
	     'module_info'/1,
	     'render'/2,
	     'start'/0]
    attributes []
'get_config'/1 =
    %% Line 38
    fun (_cor0) ->
	%% Line 58
	call 'proplists':'get_value'
	    (_cor0, [{'security_level','low'}|[{'debug_mode','development'}|[{'build_mode','production'}|[{'cwd',[46|[47]]}|[{'framework_subdir',[108|[105|[98|[47]]]]}|[{'model_subdir',[100|[101|[118|[47|[109|[111|[100|[101|[108|[115|[47]]]]]]]]]]]}|[{'view_subdir',[100|[101|[118|[47|[118|[105|[101|[119|[115|[47]]]]]]]]]]}|[{'controller_subdir',[100|[101|[118|[47|[99|[111|[110|[116|[114|[111|[108|[108|[101|[114|[115|[47]]]]]]]]]]]]]]]]}|[{'httpd_config',[{'modules',['mod_esi'|['mod_alias'|['mod_get']]]}|[{'port',80}|[{'server_name',[]}|[{'server_root',[46|[47|[108|[111|[103|[47]]]]]]}|[{'document_root',[46|[47|[119|[101|[98|[114|[111|[111|[116|[47]]]]]]]]]]}|[{'directory_index',[[105|[110|[100|[101|[120|[46|[104|[116|[109|[108]]]]]]]]]]]}|[{'erl_script_alias',{[47|[101|[122]]],['default']}}]]]]]]]}]]]]]]]]])
'start'/0 =
    %% Line 63
    fun () ->
	do  %% Line 64
	    call 'io':'format'
		(%% Line 65
		 [10|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[45|[10|[10|[101|[122|[58|[115|[116|[97|[114|[116|[47|[48|[32|[119|[97|[115|[32|[99|[97|[108|[108|[101|[100|[46|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	    let <Scanned> =
		%% Line 67
		apply 'scan'/0
		    ()
	    in  do  %% Line 68
		    call 'io':'format'
			([32|[32|[78|[111|[119|[32|[99|[97|[108|[108|[105|[110|[103|[32|[101|[122|[58|[99|[111|[109|[112|[105|[108|[101|[95|[97|[110|[100|[95|[108|[111|[97|[100|[95|[101|[114|[108|[47|[50|[32|[111|[110|[58|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		    let <_cor4> =
			%% Line 71
			( fun (_cor2) ->
			      apply 'compile_and_load_erl'/1
				  (_cor2)
			  -| [{'id',{0,0,'-start/0-fun-0-'}}] )
		    in  let <_cor1> =
			    %% Line 72
			    call 'proplists':'get_value'
				('erl', Scanned)
			in  do  %% Line 70
				call 'lists':'foreach'
				    (_cor4, _cor1)
				do  %% Line 74
				    call 'io':'format'
					([32|[32|[78|[111|[119|[32|[99|[97|[108|[108|[105|[110|[103|[32|[101|[122|[58|[99|[111|[109|[112|[105|[108|[101|[95|[97|[110|[100|[95|[108|[111|[97|[100|[95|[118|[105|[101|[119|[47|[50|[32|[111|[110|[58|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
				    let <_cor8> =
					%% Line 76
					( fun (_cor6) ->
					      apply 'compile_and_load_view'/1
						  (_cor6)
					  -| [{'id',{0,0,'-start/0-fun-1-'}}] )
				    in  let <_cor5> =
					    %% Line 77
					    call 'proplists':'get_value'
						('views', Scanned)
					in  do  %% Line 75
						call 'lists':'foreach'
						    (_cor8, _cor5)
						%% Line 80
						apply 'start_webserver'/0
						    ()
'scan'/0 =
    %% Line 88
    fun () ->
	do  %% Line 89
	    call 'io':'format'
		([101|[122|[58|[115|[99|[97|[110|[47|[48|[32|[119|[97|[115|[32|[99|[97|[108|[108|[101|[100|[46|[10]]]]]]]]]]]]]]]]]]]]]])
	    let <Cwd> =
		%% Line 90
		apply 'get_config'/1
		    ('cwd')
	    in  let <FrameworkSubdir> =
		    %% Line 92
		    apply 'get_config'/1
			('framework_subdir')
		in  let <ModelSubdir> =
			%% Line 93
			apply 'get_config'/1
			    ('model_subdir')
		    in  let <ViewSubdir> =
			    %% Line 94
			    apply 'get_config'/1
				('view_subdir')
			in  let <ControllerSubdir> =
				%% Line 95
				apply 'get_config'/1
				    ('controller_subdir')
			    in  let <_cor5> =
				    %% Line 97
				    call 'erlang':'++'
					(Cwd, FrameworkSubdir)
				in  let <_cor6> =
					%% Line 97
					call 'file':'list_dir'
					    (_cor5)
				    in  let <EzFiles> =
					    %% Line 97
					    call 'erlang':'element'
						(2, _cor6)
					in  let <_cor8> =
						%% Line 98
						call 'erlang':'++'
						    (Cwd, ModelSubdir)
					    in  let <_cor9> =
						    %% Line 98
						    call 'file':'list_dir'
							(_cor8)
						in  let <ModelFiles> =
							%% Line 98
							call 'erlang':'element'
							    (2, _cor9)
						    in  let <_cor11> =
							    %% Line 99
							    call 'erlang':'++'
								(Cwd, ViewSubdir)
							in  let <_cor12> =
								%% Line 99
								call 'file':'list_dir'
								    (_cor11)
							    in  let <ViewFiles> =
								    %% Line 99
								    call 'erlang':'element'
									(2, _cor12)
								in  let <_cor14> =
									%% Line 100
									call 'erlang':'++'
									    (Cwd, ControllerSubdir)
								    in  let <_cor15> =
									    %% Line 100
									    call 'file':'list_dir'
										(_cor14)
									in  let <ControllerFiles> =
										%% Line 100
										call 'erlang':'element'
										    (2, _cor15)
									    in  let <Ez> =
										    %% Line 103
										    apply 'tag_files'/4
											(EzFiles, FrameworkSubdir, [94|[101|[122|[46|[42|[46|[101|[114|[108|[36]]]]]]]]]], [46|[101|[114|[108|[36]]]]])
										in  let <Models> =
											%% Line 105
											apply 'tag_files'/4
											    (ModelFiles, ModelSubdir, [94|[46|[43|[46|[109|[111|[100|[101|[108|[46|[101|[114|[108|[36]]]]]]]]]]]]]], [46|[101|[114|[108|[36]]]]])
										    in  let <Views> =
											    %% Line 107
											    apply 'tag_files'/4
												(ViewFiles, ViewSubdir, [94|[46|[43|[46|[118|[105|[101|[119|[36]]]]]]]]], [36])
											in  let <Controllers> =
												%% Line 109
												apply 'tag_files'/4
												    (ControllerFiles, ControllerSubdir, [94|[46|[43|[46|[101|[114|[108|[36]]]]]]]], [46|[101|[114|[108|[36]]]]])
											    in  let <_cor21> =
												    %% Line 115
												    call 'lists':'flatten'
													([Ez|[Controllers|[Models|[]]]])
												in  %% Line 111
												    [{'ez',Ez}|%% Line 112
													       [{'controllers',Controllers}|%% Line 113
																	    [{'models',Models}|%% Line 114
																			       [{'views',Views}|%% Line 115
																						[{'erl',_cor21}|%% Line 116
																								[]]]]]]
'tag_files'/4 =
    %% Line 121
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 122
	    ( fun (_cor5) ->
		  let <_cor4> =
		      call 're':'run'
			  (_cor5, _cor1)
		  in  call 'erlang':'is_tuple'
			  (_cor4)
	      -| [{'id',{0,0,'-tag_files/4-fun-0-'}}] )
	in  let <Taken> =
		%% Line 122
		call 'lists':'filter'
		    (_cor7, _cor3)
	    in  let <_cor12> =
		    %% Line 124
		    ( fun (_cor10) ->
			  let <_cor9> =
			      call 're':'replace'
				  (_cor10, _cor0, [], [{'return','list'}])
			  in  {_cor9,_cor2,_cor10}
		      -| [{'id',{0,0,'-tag_files/4-fun-1-'}}] )
		in  %% Line 123
		    call 'lists':'map'
			(_cor12, %% Line 125
				 Taken)
'compile_and_load_erl'/1 =
    %% Line 131
    fun (_cor0) ->
	case _cor0 of
	  <{_X_Module,Dir,Filename}> when 'true' ->
	      do  %% Line 132
		  call 'io':'format'
		      ([9|[34|[126|[115|[126|[115|[34|[10]]]]]]]], [Dir|[Filename|[]]])
		  let <_cor1> =
		      %% Line 133
		      call 'erlang':'++'
			  (Dir, Filename)
		  in  %% Line 133
		      case call 'compile':'file'
			       (_cor1, ['binary'|['report']]) of
			%% Line 134
			<'error'> when 'true' ->
			    call 'erlang':'error'
				('erl_compilation_error')
			%% Line 135
			<{'ok',ModuleName,Bin}> when 'true' ->
			    call 'code':'load_binary'
				(ModuleName, Filename, Bin)
			( <_cor2> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor2})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'compile_and_load_erl',1}}] )
	    -| ['compiler_generated'] )
	end
'compile_and_load_view'/1 =
    %% Line 141
    fun (_cor0) ->
	case _cor0 of
	  <{Module,Dir,Filename}> when 'true' ->
	      do  %% Line 142
		  call 'io':'format'
		      ([9|[34|[126|[115|[126|[115|[34|[10]]]]]]]], [Dir|[Filename|[]]])
		  let <_cor1> =
		      %% Line 143
		      call 'erlang':'++'
			  (Dir, Filename)
		  in  %% Line 143
		      case call 'file':'read_file'
			       (_cor1) of
			%% Line 144
			<{'error',Error}> when 'true' ->
			    call 'erlang':'error'
				({'could_not_read_view',Error})
			%% Line 145
			<{'ok',Bin}> when 'true' ->
			    apply 'view_bin_to_loaded_module'/3
				(Module, Filename, Bin)
			( <_cor2> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor2})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'compile_and_load_view',1}}] )
	    -| ['compiler_generated'] )
	end
'view_bin_to_loaded_module'/3 =
    %% Line 151
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 156
	    apply 'view_bin_to_erl_bin_forms'/2
		(_cor2, _cor0)
	in  let <_cor4> =
		%% Line 154
		call 'lists':'map'
		    (%% Line 155
		     ( 'erl_bin_form_to_abstract'/1
		       -| [{'id',{0,0,'-view_bin_to_loaded_module/3-fun-0-'}}] ), _cor3)
	    in  %% Line 153
		case call 'compile':'forms'
			 (_cor4) of
		  <{'ok',ModuleName,CompiledBin}> when 'true' ->
		      %% Line 159
		      call 'code':'load_binary'
			  (ModuleName, _cor1, CompiledBin)
		  ( <_cor5> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor5})
		    -| ['compiler_generated'] )
		end
'view_bin_to_erl_bin_forms'/2 =
    %% Line 164
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 165
	    call 'erlang':'list_to_binary'
		([#{#<45>(8,1,'integer',['unsigned'|['big']]),
		    #<109>(8,1,'integer',['unsigned'|['big']]),
		    #<111>(8,1,'integer',['unsigned'|['big']]),
		    #<100>(8,1,'integer',['unsigned'|['big']]),
		    #<117>(8,1,'integer',['unsigned'|['big']]),
		    #<108>(8,1,'integer',['unsigned'|['big']]),
		    #<101>(8,1,'integer',['unsigned'|['big']]),
		    #<40>(8,1,'integer',['unsigned'|['big']]),
		    #<39>(8,1,'integer',['unsigned'|['big']])}#|[_cor1|[#{#<39>(8,1,'integer',['unsigned'|['big']]),
									  #<41>(8,1,'integer',['unsigned'|['big']]),
									  #<46>(8,1,'integer',['unsigned'|['big']])}#]]])
	in  let <_cor3> =
		%% Line 170
		apply 'xml_slice_contents'/3
		    (#{#<101>(8,1,'integer',['unsigned'|['big']]),
		       #<114>(8,1,'integer',['unsigned'|['big']]),
		       #<108>(8,1,'integer',['unsigned'|['big']])}#, _cor0, ( 'erl_exprs_to_abstract'/1
									      -| [{'id',{0,0,'-view_bin_to_erl_bin_forms/2-fun-0-'}}] ))
	    in  let <_cor4> =
		    %% Line 169
		    call 'io_lib':'print'
			(_cor3)
		in  let <_cor5> =
			%% Line 167
			call 'erlang':'list_to_binary'
			    (%% Line 168
			     [#{#<10>(8,1,'integer',['unsigned'|['big']]),
				#<115>(8,1,'integer',['unsigned'|['big']]),
				#<112>(8,1,'integer',['unsigned'|['big']]),
				#<108>(8,1,'integer',['unsigned'|['big']]),
				#<105>(8,1,'integer',['unsigned'|['big']]),
				#<99>(8,1,'integer',['unsigned'|['big']]),
				#<101>(8,1,'integer',['unsigned'|['big']]),
				#<40>(8,1,'integer',['unsigned'|['big']]),
				#<66>(8,1,'integer',['unsigned'|['big']]),
				#<105>(8,1,'integer',['unsigned'|['big']]),
				#<110>(8,1,'integer',['unsigned'|['big']]),
				#<100>(8,1,'integer',['unsigned'|['big']]),
				#<105>(8,1,'integer',['unsigned'|['big']]),
				#<110>(8,1,'integer',['unsigned'|['big']]),
				#<103>(8,1,'integer',['unsigned'|['big']]),
				#<115>(8,1,'integer',['unsigned'|['big']]),
				#<41>(8,1,'integer',['unsigned'|['big']]),
				#<45>(8,1,'integer',['unsigned'|['big']]),
				#<62>(8,1,'integer',['unsigned'|['big']]),
				#<10>(8,1,'integer',['unsigned'|['big']]),
				#<83>(8,1,'integer',['unsigned'|['big']]),
				#<108>(8,1,'integer',['unsigned'|['big']]),
				#<105>(8,1,'integer',['unsigned'|['big']]),
				#<99>(8,1,'integer',['unsigned'|['big']]),
				#<101>(8,1,'integer',['unsigned'|['big']]),
				#<100>(8,1,'integer',['unsigned'|['big']]),
				#<88>(8,1,'integer',['unsigned'|['big']]),
				#<109>(8,1,'integer',['unsigned'|['big']]),
				#<108>(8,1,'integer',['unsigned'|['big']]),
				#<32>(8,1,'integer',['unsigned'|['big']]),
				#<61>(8,1,'integer',['unsigned'|['big']]),
				#<32>(8,1,'integer',['unsigned'|['big']])}#|%% Line 169
									    [_cor4|%% Line 177
										   [#{#<44>(8,1,'integer',['unsigned'|['big']]),
										      #<10>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<65>(8,1,'integer',['unsigned'|['big']]),
										      #<114>(8,1,'integer',['unsigned'|['big']]),
										      #<103>(8,1,'integer',['unsigned'|['big']]),
										      #<115>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<61>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<10>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<91>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<102>(8,1,'integer',['unsigned'|['big']]),
										      #<117>(8,1,'integer',['unsigned'|['big']]),
										      #<110>(8,1,'integer',['unsigned'|['big']]),
										      #<40>(8,1,'integer',['unsigned'|['big']]),
										      #<123>(8,1,'integer',['unsigned'|['big']]),
										      #<84>(8,1,'integer',['unsigned'|['big']]),
										      #<121>(8,1,'integer',['unsigned'|['big']]),
										      #<112>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<83>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<99>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<125>(8,1,'integer',['unsigned'|['big']]),
										      #<41>(8,1,'integer',['unsigned'|['big']]),
										      #<45>(8,1,'integer',['unsigned'|['big']]),
										      #<62>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<10>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<99>(8,1,'integer',['unsigned'|['big']]),
										      #<97>(8,1,'integer',['unsigned'|['big']]),
										      #<115>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<84>(8,1,'integer',['unsigned'|['big']]),
										      #<121>(8,1,'integer',['unsigned'|['big']]),
										      #<112>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<111>(8,1,'integer',['unsigned'|['big']]),
										      #<102>(8,1,'integer',['unsigned'|['big']]),
										      #<10>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<110>(8,1,'integer',['unsigned'|['big']]),
										      #<111>(8,1,'integer',['unsigned'|['big']]),
										      #<116>(8,1,'integer',['unsigned'|['big']]),
										      #<95>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<114>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<45>(8,1,'integer',['unsigned'|['big']]),
										      #<62>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<10>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<83>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<99>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<59>(8,1,'integer',['unsigned'|['big']]),
										      #<10>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<114>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<45>(8,1,'integer',['unsigned'|['big']]),
										      #<62>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<10>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<10>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<37>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<100>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<98>(8,1,'integer',['unsigned'|['big']]),
										      #<117>(8,1,'integer',['unsigned'|['big']]),
										      #<103>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<107>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<116>(8,1,'integer',['unsigned'|['big']]),
										      #<104>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<115>(8,1,'integer',['unsigned'|['big']]),
										      #<58>(8,1,'integer',['unsigned'|['big']]),
										      #<10>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<37>(8,1,'integer',['unsigned'|['big']]),
										      #<97>(8,1,'integer',['unsigned'|['big']]),
										      #<112>(8,1,'integer',['unsigned'|['big']]),
										      #<112>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<121>(8,1,'integer',['unsigned'|['big']]),
										      #<40>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<111>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<102>(8,1,'integer',['unsigned'|['big']]),
										      #<111>(8,1,'integer',['unsigned'|['big']]),
										      #<114>(8,1,'integer',['unsigned'|['big']]),
										      #<109>(8,1,'integer',['unsigned'|['big']]),
										      #<97>(8,1,'integer',['unsigned'|['big']]),
										      #<116>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<91>(8,1,'integer',['unsigned'|['big']]),
										      #<34>(8,1,'integer',['unsigned'|['big']]),
										      #<126>(8,1,'integer',['unsigned'|['big']]),
										      #<112>(8,1,'integer',['unsigned'|['big']]),
										      #<34>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<91>(8,1,'integer',['unsigned'|['big']]),
										      #<123>(8,1,'integer',['unsigned'|['big']]),
										      #<115>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<99>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<83>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<99>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<125>(8,1,'integer',['unsigned'|['big']]),
										      #<93>(8,1,'integer',['unsigned'|['big']]),
										      #<93>(8,1,'integer',['unsigned'|['big']]),
										      #<41>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<10>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<37>(8,1,'integer',['unsigned'|['big']]),
										      #<97>(8,1,'integer',['unsigned'|['big']]),
										      #<112>(8,1,'integer',['unsigned'|['big']]),
										      #<112>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<121>(8,1,'integer',['unsigned'|['big']]),
										      #<40>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<111>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<102>(8,1,'integer',['unsigned'|['big']]),
										      #<111>(8,1,'integer',['unsigned'|['big']]),
										      #<114>(8,1,'integer',['unsigned'|['big']]),
										      #<109>(8,1,'integer',['unsigned'|['big']]),
										      #<97>(8,1,'integer',['unsigned'|['big']]),
										      #<116>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<91>(8,1,'integer',['unsigned'|['big']]),
										      #<34>(8,1,'integer',['unsigned'|['big']]),
										      #<126>(8,1,'integer',['unsigned'|['big']]),
										      #<112>(8,1,'integer',['unsigned'|['big']]),
										      #<34>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<91>(8,1,'integer',['unsigned'|['big']]),
										      #<123>(8,1,'integer',['unsigned'|['big']]),
										      #<98>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<110>(8,1,'integer',['unsigned'|['big']]),
										      #<100>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<110>(8,1,'integer',['unsigned'|['big']]),
										      #<103>(8,1,'integer',['unsigned'|['big']]),
										      #<115>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<66>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<110>(8,1,'integer',['unsigned'|['big']]),
										      #<100>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<110>(8,1,'integer',['unsigned'|['big']]),
										      #<103>(8,1,'integer',['unsigned'|['big']]),
										      #<115>(8,1,'integer',['unsigned'|['big']]),
										      #<125>(8,1,'integer',['unsigned'|['big']]),
										      #<93>(8,1,'integer',['unsigned'|['big']]),
										      #<93>(8,1,'integer',['unsigned'|['big']]),
										      #<41>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<10>(8,1,'integer',['unsigned'|['big']]),
										      #<10>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<123>(8,1,'integer',['unsigned'|['big']]),
										      #<118>(8,1,'integer',['unsigned'|['big']]),
										      #<97>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<117>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<86>(8,1,'integer',['unsigned'|['big']]),
										      #<97>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<117>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<95>(8,1,'integer',['unsigned'|['big']]),
										      #<78>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<119>(8,1,'integer',['unsigned'|['big']]),
										      #<66>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<110>(8,1,'integer',['unsigned'|['big']]),
										      #<100>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<110>(8,1,'integer',['unsigned'|['big']]),
										      #<103>(8,1,'integer',['unsigned'|['big']]),
										      #<115>(8,1,'integer',['unsigned'|['big']]),
										      #<125>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<10>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<61>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<97>(8,1,'integer',['unsigned'|['big']]),
										      #<112>(8,1,'integer',['unsigned'|['big']]),
										      #<112>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<121>(8,1,'integer',['unsigned'|['big']]),
										      #<40>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<114>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<95>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<118>(8,1,'integer',['unsigned'|['big']]),
										      #<97>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<120>(8,1,'integer',['unsigned'|['big']]),
										      #<112>(8,1,'integer',['unsigned'|['big']]),
										      #<114>(8,1,'integer',['unsigned'|['big']]),
										      #<115>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<91>(8,1,'integer',['unsigned'|['big']]),
										      #<83>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<99>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<66>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<110>(8,1,'integer',['unsigned'|['big']]),
										      #<100>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<110>(8,1,'integer',['unsigned'|['big']]),
										      #<103>(8,1,'integer',['unsigned'|['big']]),
										      #<115>(8,1,'integer',['unsigned'|['big']]),
										      #<93>(8,1,'integer',['unsigned'|['big']]),
										      #<41>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<10>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<86>(8,1,'integer',['unsigned'|['big']]),
										      #<97>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<117>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<10>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<110>(8,1,'integer',['unsigned'|['big']]),
										      #<100>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<10>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<110>(8,1,'integer',['unsigned'|['big']]),
										      #<100>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<10>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<83>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<99>(8,1,'integer',['unsigned'|['big']]),
										      #<101>(8,1,'integer',['unsigned'|['big']]),
										      #<100>(8,1,'integer',['unsigned'|['big']]),
										      #<88>(8,1,'integer',['unsigned'|['big']]),
										      #<109>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<93>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<10>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<32>(8,1,'integer',['unsigned'|['big']]),
										      #<97>(8,1,'integer',['unsigned'|['big']]),
										      #<112>(8,1,'integer',['unsigned'|['big']]),
										      #<112>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<121>(8,1,'integer',['unsigned'|['big']]),
										      #<40>(8,1,'integer',['unsigned'|['big']]),
										      #<108>(8,1,'integer',['unsigned'|['big']]),
										      #<105>(8,1,'integer',['unsigned'|['big']]),
										      #<115>(8,1,'integer',['unsigned'|['big']]),
										      #<116>(8,1,'integer',['unsigned'|['big']]),
										      #<115>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<109>(8,1,'integer',['unsigned'|['big']]),
										      #<97>(8,1,'integer',['unsigned'|['big']]),
										      #<112>(8,1,'integer',['unsigned'|['big']]),
										      #<44>(8,1,'integer',['unsigned'|['big']]),
										      #<65>(8,1,'integer',['unsigned'|['big']]),
										      #<114>(8,1,'integer',['unsigned'|['big']]),
										      #<103>(8,1,'integer',['unsigned'|['big']]),
										      #<115>(8,1,'integer',['unsigned'|['big']]),
										      #<41>(8,1,'integer',['unsigned'|['big']]),
										      #<46>(8,1,'integer',['unsigned'|['big']])}#]]])
		    in  %% Line 165
			[_cor2|%% Line 166
			       [#{#<45>(8,1,'integer',['unsigned'|['big']]),
				  #<101>(8,1,'integer',['unsigned'|['big']]),
				  #<120>(8,1,'integer',['unsigned'|['big']]),
				  #<112>(8,1,'integer',['unsigned'|['big']]),
				  #<111>(8,1,'integer',['unsigned'|['big']]),
				  #<114>(8,1,'integer',['unsigned'|['big']]),
				  #<116>(8,1,'integer',['unsigned'|['big']]),
				  #<40>(8,1,'integer',['unsigned'|['big']]),
				  #<91>(8,1,'integer',['unsigned'|['big']]),
				  #<115>(8,1,'integer',['unsigned'|['big']]),
				  #<112>(8,1,'integer',['unsigned'|['big']]),
				  #<108>(8,1,'integer',['unsigned'|['big']]),
				  #<105>(8,1,'integer',['unsigned'|['big']]),
				  #<99>(8,1,'integer',['unsigned'|['big']]),
				  #<101>(8,1,'integer',['unsigned'|['big']]),
				  #<47>(8,1,'integer',['unsigned'|['big']]),
				  #<49>(8,1,'integer',['unsigned'|['big']]),
				  #<93>(8,1,'integer',['unsigned'|['big']]),
				  #<41>(8,1,'integer',['unsigned'|['big']]),
				  #<46>(8,1,'integer',['unsigned'|['big']])}#|%% Line 167
									      [_cor5|%% Line 198
										     []]]]
'xml_slice_contents'/3 =
    %% Line 203
    fun (_cor2,_cor1,_cor0) ->
	let <OpenTag> =
	    %% Line 204
	    #{#<60>(8,1,'integer',['unsigned'|['big']]),
	      #<_cor2>('all',8,'binary',['unsigned'|['big']]),
	      #<62>(8,1,'integer',['unsigned'|['big']])}#
	in  let <CloseTag> =
		%% Line 205
		#{#<60>(8,1,'integer',['unsigned'|['big']]),
		  #<47>(8,1,'integer',['unsigned'|['big']]),
		  #<_cor2>('all',8,'binary',['unsigned'|['big']]),
		  #<62>(8,1,'integer',['unsigned'|['big']])}#
	    in  let <Element> =
		    %% Line 206
		    call 'erlang':'binary_to_atom'
			(_cor2, 'utf8')
		in  let <_cor6> =
			%% Line 207
			#{#<110>(8,1,'integer',['unsigned'|['big']]),
			  #<111>(8,1,'integer',['unsigned'|['big']]),
			  #<116>(8,1,'integer',['unsigned'|['big']]),
			  #<95>(8,1,'integer',['unsigned'|['big']]),
			  #<_cor2>('all',8,'binary',['unsigned'|['big']])}#
		    in  let <NotElement> =
			    %% Line 207
			    call 'erlang':'binary_to_atom'
				(_cor6, 'utf8')
			in  let <Fun> =
				%% Line 209
				( fun (_cor12,_cor11) ->
				      case <_cor12,_cor11> of
					%% Line 210
					<_X_ThisFun,[#{}#|T]> when 'true' ->
					    %% Line 212
					    call 'lists':'reverse'
						(T)
					%% Line 213
					<ThisFun,[H|T]> when 'true' ->
					    %% Line 215
					    case call 're':'split'
						     (H, OpenTag, ['caseless'|[{'parts',2}]]) of
					      %% Line 216
					      <[_cor19|[]]>
						  when call 'erlang':'=:='
							(_cor19,
							 H) ->
						  %% Line 218
						  apply ThisFun
						      (ThisFun, [#{}#|[{NotElement,H}|T]])
					      %% Line 219
					      <[BeforeOpenTag|[AfterOpenTag|[]]]> when 'true' ->
						  %% Line 221
						  case call 're':'split'
							   (AfterOpenTag, CloseTag, ['caseless'|[{'parts',2}]]) of
						    %% Line 222
						    <[_cor20|[]]>
							when call 'erlang':'=:='
							      (_cor20,
							       AfterOpenTag) ->
							%% Line 224
							call 'erlang':'error'
							    ({'missing_close_tag',CloseTag,AfterOpenTag})
						    %% Line 225
						    <[InTag|[AfterCloseTag|[]]]> when 'true' ->
							let <_cor8> =
							    %% Line 230
							    apply _cor0
								(InTag)
							in  %% Line 227
							    apply ThisFun
								(%% Line 228
								 ThisFun, %% Line 229
									  [AfterCloseTag|%% Line 230
											 [{Element,_cor8}|%% Line 231
													  [{NotElement,BeforeOpenTag}|%% Line 232
																      T]]])
						    ( <_cor9> when 'true' ->
							  primop 'match_fail'
							      ({'case_clause',_cor9})
						      -| ['compiler_generated'] )
						  end
					      ( <_cor10> when 'true' ->
						    primop 'match_fail'
							({'case_clause',_cor10})
						-| ['compiler_generated'] )
					    end
					( <_cor14,_cor13> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor14,_cor13})
						-| [{'function_name',{'-xml_slice_contents/3-fun-0-',2}}] )
					  -| ['compiler_generated'] )
				      end
				  -| [{'id',{0,0,'-xml_slice_contents/3-fun-0-'}}] )
			    in  %% Line 240
				apply Fun
				    (Fun, [_cor1|[]])
'erl_exprs_to_abstract'/1 =
    %% Line 245
    fun (_cor0) ->
	do  %% Line 247
	    case call 're':'run'
		     (_cor0, #{#<46>(8,1,'integer',['unsigned'|['big']]),
			       #<109>(8,1,'integer',['unsigned'|['big']]),
			       #<111>(8,1,'integer',['unsigned'|['big']]),
			       #<100>(8,1,'integer',['unsigned'|['big']]),
			       #<101>(8,1,'integer',['unsigned'|['big']]),
			       #<108>(8,1,'integer',['unsigned'|['big']])}#) of
	      %% Line 248
	      <'nomatch'> when 'true' ->
		  'ok'
	      %% Line 249
	      <_cor6> when 'true' ->
		  call 'io':'format'
		      (#{#<9>(8,1,'integer',['unsigned'|['big']]),
			 #<9>(8,1,'integer',['unsigned'|['big']]),
			 #<87>(8,1,'integer',['unsigned'|['big']]),
			 #<65>(8,1,'integer',['unsigned'|['big']]),
			 #<82>(8,1,'integer',['unsigned'|['big']]),
			 #<78>(8,1,'integer',['unsigned'|['big']]),
			 #<73>(8,1,'integer',['unsigned'|['big']]),
			 #<78>(8,1,'integer',['unsigned'|['big']]),
			 #<71>(8,1,'integer',['unsigned'|['big']]),
			 #<58>(8,1,'integer',['unsigned'|['big']]),
			 #<32>(8,1,'integer',['unsigned'|['big']]),
			 #<97>(8,1,'integer',['unsigned'|['big']]),
			 #<32>(8,1,'integer',['unsigned'|['big']]),
			 #<77>(8,1,'integer',['unsigned'|['big']]),
			 #<111>(8,1,'integer',['unsigned'|['big']]),
			 #<100>(8,1,'integer',['unsigned'|['big']]),
			 #<101>(8,1,'integer',['unsigned'|['big']]),
			 #<108>(8,1,'integer',['unsigned'|['big']]),
			 #<32>(8,1,'integer',['unsigned'|['big']]),
			 #<109>(8,1,'integer',['unsigned'|['big']]),
			 #<97>(8,1,'integer',['unsigned'|['big']]),
			 #<121>(8,1,'integer',['unsigned'|['big']]),
			 #<32>(8,1,'integer',['unsigned'|['big']]),
			 #<98>(8,1,'integer',['unsigned'|['big']]),
			 #<101>(8,1,'integer',['unsigned'|['big']]),
			 #<32>(8,1,'integer',['unsigned'|['big']]),
			 #<114>(8,1,'integer',['unsigned'|['big']]),
			 #<101>(8,1,'integer',['unsigned'|['big']]),
			 #<102>(8,1,'integer',['unsigned'|['big']]),
			 #<101>(8,1,'integer',['unsigned'|['big']]),
			 #<114>(8,1,'integer',['unsigned'|['big']]),
			 #<101>(8,1,'integer',['unsigned'|['big']]),
			 #<110>(8,1,'integer',['unsigned'|['big']]),
			 #<99>(8,1,'integer',['unsigned'|['big']]),
			 #<101>(8,1,'integer',['unsigned'|['big']]),
			 #<100>(8,1,'integer',['unsigned'|['big']]),
			 #<46>(8,1,'integer',['unsigned'|['big']]),
			 #<10>(8,1,'integer',['unsigned'|['big']])}#)
	    end
	    let <_cor2> =
		%% Line 251
		call 'erlang':'binary_to_list'
		    (_cor0)
	    in  %% Line 251
		case call 'erl_scan':'string'
			 (_cor2) of
		  %% Line 252
		  <{'error',ErrorInfo,ErrorLocation}> when 'true' ->
		      %% Line 253
		      call 'erlang':'error'
			  ({ErrorLocation,ErrorInfo})
		  %% Line 254
		  <{'ok',Tokens,_X_EndLocation}> when 'true' ->
		      %% Line 255
		      case call 'erl_parse':'parse_exprs'
			       (Tokens) of
			%% Line 256
			<{'error',ErrorInfo}> when 'true' ->
			    call 'erlang':'error'
				(ErrorInfo)
			%% Line 257
			<{'ok',ExprList}> when 'true' ->
			    ExprList
			( <_cor3> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor3})
			  -| ['compiler_generated'] )
		      end
		  ( <_cor4> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_cor4})
		    -| ['compiler_generated'] )
		end
'erl_bin_form_to_abstract'/1 =
    %% Line 264
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 265
	    call 'erlang':'binary_to_list'
		(_cor0)
	in  %% Line 265
	    case call 'erl_scan':'string'
		     (_cor1) of
	      %% Line 266
	      <{'error',ErrorInfo,ErrorLocation}> when 'true' ->
		  %% Line 267
		  call 'erlang':'error'
		      ({ErrorLocation,ErrorInfo})
	      %% Line 268
	      <{'ok',Tokens,_X_EndLocation}> when 'true' ->
		  %% Line 269
		  case call 'erl_parse':'parse_form'
			   (Tokens) of
		    %% Line 270
		    <{'error',ErrorInfo}> when 'true' ->
			call 'erlang':'error'
			    (ErrorInfo)
		    %% Line 271
		    <{'ok',ExprList}> when 'true' ->
			ExprList
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor2})
		      -| ['compiler_generated'] )
		  end
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor3})
		-| ['compiler_generated'] )
	    end
'start_webserver'/0 =
    %% Line 278
    fun () ->
	let <HttpdConfig> =
	    %% Line 279
	    apply 'get_config'/1
		('httpd_config')
	in  do  %% Line 280
		call 'io':'format'
		    ([101|[122|[58|[115|[116|[97|[114|[116|[95|[119|[101|[98|[115|[101|[114|[118|[101|[114|[47|[48|[32|[119|[97|[115|[32|[99|[97|[108|[108|[101|[100|[46|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		do  %% Line 282
		    call 'inets':'stop'
			()
		    do  %% Line 282
			call 'inets':'start'
			    ()
			let <_cor1> =
			    %% Line 283
			    call 'proplists':'get_value'
				('port', HttpdConfig)
			in  do  %% Line 283
				call 'io':'format'
				    ([9|[65|[116|[116|[101|[109|[112|[116|[105|[110|[103|[32|[112|[111|[114|[116|[32|[126|[112|[46|[10]]]]]]]]]]]]]]]]]]]]], [_cor1|[]])
				%% Line 284
				call 'inets':'start'
				    ('httpd', HttpdConfig)
'render'/2 =
    %% Line 289
    fun (_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 293
	    ( fun (_cor3) ->
		  case _cor3 of
		    <{Name,Value}> when 'true' ->
			[Name|[[58|[32]]|[Value|[[13|[10]]]]]]
		    ( <_cor4> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor4})
			    -| [{'function_name',{'-render/2-fun-0-',1}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-render/2-fun-0-'}}] )
	in  let <_cor2> =
		%% Line 294
		call 'proplists':'get_value'
		    ('headers', _cor0)
	    in  let <_cor6> =
		    %% Line 292
		    call 'lists':'map'
			(_cor5, _cor2)
		in  let <_cor8> =
			%% Line 297
			call 'proplists':'get_value'
			    ('view', _cor0)
		    in  let <_cor7> =
			    %% Line 299
			    call 'proplists':'get_value'
				('bindings', _cor0)
			in  let <_cor9> =
				%% Line 296
				call _cor8:%% Line 298
					   'splice'
				    (_cor7)
			    in  %% Line 290
				call 'mod_esi':'deliver'
				    (_cor1, %% Line 292
					    [[_cor6|%% Line 294
						    [[13|[10]]]]|%% Line 296
								 [_cor9|%% Line 301
									[]]])
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('ez')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('ez', _cor0)
end